import type { Issue } from '@cspell/cspell-types';
import type { LinterOptions } from '../options.js';
import type { GlobSrcInfo } from '../util/glob.js';
import type { FinalizedReporter } from '../util/reporters.js';
interface Deprecated {
    fileLists?: LinterOptions['fileList'];
}
export declare class LintRequest {
    readonly fileGlobs: string[];
    readonly options: LinterOptions & Deprecated;
    readonly reporter: FinalizedReporter;
    readonly uniqueFilter: (issue: Issue) => boolean;
    readonly locale: string;
    readonly configFile: string | undefined;
    readonly excludes: GlobSrcInfo[];
    readonly root: string;
    readonly showContext: number;
    readonly enableGlobDot: boolean | undefined;
    readonly fileLists: string[];
    constructor(fileGlobs: string[], options: LinterOptions & Deprecated, reporter: FinalizedReporter);
}
export {};
//# sourceMappingURL=LintRequest.d.ts.map